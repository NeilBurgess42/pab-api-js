!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("axios")):"function"==typeof define&&define.amd?define(["exports","axios"],n):n((t||self).pabApiJs={},t.axios)}(this,function(t,n){function e(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var a=e(n);function i(){return i=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}return t},i.apply(this,arguments)}t.Pab=function(t,n){var e=this;void 0===n&&(n={}),this.axios=void 0,this.checkPabExists=function(){return e.axios.get("api/healthcheck").then(function(){return!0}).catch(function(){return!1})},this.getFullReport=function(){return e.axios.get("api/fullreport").then(function(t){return t.data})},this.activateContract=function(t,n){return e.axios.post("api/contract/activate",{caID:{tag:t},caWallet:{getWalletId:n}},{headers:{"Content-Type":"application/json"}}).then(function(t){return t.data.unContractInstanceId})},this.getContractStatus=function(t){return e.axios.get("api/contract/instance/"+t+"/status").then(function(t){return t.data})},this.getContractSchema=function(t){return e.axios.get("api/contract/instance/"+t+"/schema").then(function(t){return t.data})},this.callContractEndpoint=function(t,n,a){return void 0===a&&(a={}),e.axios.post("api/contract/instance/"+t+"/endpoint/"+n,a,{headers:{"Content-Type":"application/json"}})},this.stopContract=function(t){return e.axios.put("api/contract/instance/"+t+"/stop")},this.getContractsByWallet=function(t){return e.axios.get("api/contract/instances/wallet/"+t).then(function(t){return t.data})},this.getContracts=function(){return e.axios.get("api/contract/instances").then(function(t){return t.data})},this.getContractsDefinitions=function(){return e.axios.get("api/contract/definitions").then(function(t){return t.data})},this.axios=a.default.create(i({},n,{baseURL:t}))}});
